* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Colors variables organized */
:root {
  --hue: 194;
  --bg--color: hsl(var(--hue), 5%, 7%);
  --text--color: hsl(var(--hue), 40%, 98%);
  --primary--color: hsl(var(--hue), 100%, 63%);
  --controls-bg--color: hsl(var(--hue), 0%, 14%);

  font-size: clamp(
    40%,
    1% + 2vw,
    62.5%
  ); /* Flexibiliza e define um range para o dimensionameto do elemento. Vai sempre fazer o cálculo do meio, tendo como mín 40% e máx 62.5%.*/
}

body {
  background-color: var(--bg--color);
  color: var(--text--color);

  display: grid;
  place-content: center;
  height: 100vh;
}

#app {
  display: grid;
  justify-items: center;
}

/* Classe utilitária: tem um único propósito*/
.flex {
  display: flex;
}

#timer {
  font-size: 9.6rem;
  font-weight: bold;
  font-family: sans-serif;
}

#controls {
  margin-top: 1.6rem;
  padding: 2.2rem 4rem;
  gap: 1.6rem;

  background-color: var(--controls-bg--color);
  border-radius: 999rem;
}

button {
  background-color: transparent;
  border: 0;

  color: var(--primary--color);
  font-size: 6.4rem;

  cursor: pointer;
}

.secondary {
  color: var(--text--color);
}

/* CONTROLS */
.running .ph-play-circle,
.running .ph-timer,
.musicon .ph-speaker-none,
/* pseudo class (html:not = o html não possui... */
html:not(.running) .ph-pause-circle,
html:not(.running) .ph-stop-circle,
html:not(.musicon) .ph-speaker-high {
  display: none;
}
